name: Deploy Two Apps from DockerHub

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: [self-hosted, tcc-deploy]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Pull both Docker images
      - name: Pull Docker images
        run: |
          sudo docker pull cyprientemateu/clinic-website:v1
          sudo docker pull cyprientemateu/resume-website:v2

      # Stop and remove both containers if they exist
      - name: Stop and remove existing containers
        run: |
          sudo docker stop clinic-container || true
          sudo docker rm clinic-container || true
          sudo docker stop resume-website || true
          sudo docker rm resume-website || true
          sudo docker stop myapp-container || true
          sudo docker rm myapp-container || true

      # Run both containers on different host ports
      - name: Run Docker containers
        run: |
          sudo docker run -d --name clinic-container -p 80:80 cyprientemateu/clinic-website:v1
          sudo docker run -d --name resume-website -p 81:80 cyprientemateu/resume-website:v2

      # Notify Slack on success
      - name: Notify Slack on success
        if: success()
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "attachments": [{
              "color": "good",
              "title": "*✅ Deployment Succeeded*",
              "fields": [
                { "title": "Repo", "value": "${{ github.repository }}", "short": true },
                { "title": "Branch", "value": "${{ github.ref_name }}", "short": true },
                { "title": "Commit", "value": "*${{ github.actor }}* pushed `${{ github.event.head_commit.message }}` (`${{ github.sha }}`)", "short": false },
                { "title": "Apps", "value": "clinic-container on port 80, resume-website on port 81", "short": false },
                { "title": "Workflow", "value": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>", "short": false },
                { "title": "Time", "value": "'"$(date -u)"'", "short": false }
              ]
            }]
          }' $SLACK_WEBHOOK

      # Notify Slack on failure
      - name: Notify Slack on failure
        if: failure()
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "attachments": [{
              "color": "danger",
              "title": "*❌ Deployment Failed*",
              "fields": [
                { "title": "Repo", "value": "${{ github.repository }}", "short": true },
                { "title": "Branch", "value": "${{ github.ref_name }}", "short": true },
                { "title": "Commit", "value": "*${{ github.actor }}* pushed `${{ github.event.head_commit.message }}` (`${{ github.sha }}`)", "short": false },
                { "title": "Workflow", "value": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>", "short": false },
                { "title": "Time", "value": "'"$(date -u)"'", "short": false }
              ]
            }]
          }' $SLACK_WEBHOOK

      # Notify Slack if unstable (cancelled/skipped)
      - name: Notify Slack if unstable
        if: ${{ job.status == 'cancelled' || job.status == 'skipped' }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "attachments": [{
              "color": "warning",
              "title": "*⚠️ Deployment Unstable*",
              "fields": [
                { "title": "Repo", "value": "${{ github.repository }}", "short": true },
                { "title": "Branch", "value": "${{ github.ref_name }}", "short": true },
                { "title": "Commit", "value": "*${{ github.actor }}* pushed `${{ github.event.head_commit.message }}` (`${{ github.sha }}`)", "short": false },
                { "title": "Workflow", "value": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>", "short": false },
                { "title": "Time", "value": "'"$(date -u)"'", "short": false }
              ]
            }]
          }' $SLACK_WEBHOOK
